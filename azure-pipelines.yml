trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/*
      - build.fsx

pr:
  paths:
    include:
      - src/*
      - azure-pipelines.yml
      - build.fsx

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    jobs:
      - job: Compile
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseDotNet@2
            displayName: 'Import .NET Core SDK (6.0.202)'
            inputs:
              packageType: 'sdk'
              version: '6.0.202'
          - script: dotnet tool restore
            displayName: Restore .NET tools
          - script: dotnet fake build target Compile
            displayName: Run Compile FAKE target
          - task: CopyFiles@2
            displayName: 'Copy build artifacts'
            inputs:
              contents: '**/?(bin|obj)/**'
              targetFolder: '$(Pipeline.Workspace)/build'
          - task: PublishPipelineArtifact@0
            displayName: 'Publish build artifacts'
            inputs:
              targetPath: '$(Pipeline.Workspace)/build'
              artifactName: Build

  - stage: UnitTests
    displayName: Unit tests
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: RunTests
        displayName: Run unit tests
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
          - script: dotnet tool install -g fake-cli
            displayName: Restore .NET tools
          - script: dotnet fake run build.fsx --target Tests --single-target
            displayName: Run 'Tests' FAKE target
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: NUnit
              testResultsFiles: "**/TestResults.xml"
              failTaskOnFailedTests: true

  - stage: Release
    displayName: Release to CD system
    dependsOn: UnitTests
    condition: succeeded()
    jobs:
      - job: PushToCD
        displayName: Push to CD system
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download build artifacts'
            inputs:
              artifact: 'Build'
              path: '$(Build.SourcesDirectory)'
